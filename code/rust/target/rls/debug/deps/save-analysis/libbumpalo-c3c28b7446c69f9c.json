{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/hniemeyer/.cargo/registry/src/github.com-1ecc6299db9ec823/bumpalo-3.1.2","program":"/home/hniemeyer/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--edition=2018","--crate-name","bumpalo","/home/hniemeyer/.cargo/registry/src/github.com-1ecc6299db9ec823/bumpalo-3.1.2/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts","--crate-type","lib","--emit=dep-info,metadata,link","-C","debuginfo=2","--cfg","feature=\"default\"","-C","metadata=c3c28b7446c69f9c","-C","extra-filename=-c3c28b7446c69f9c","--out-dir","/home/hniemeyer/src/wasm/accu2020example_rust/target/rls/debug/deps","-L","dependency=/home/hniemeyer/src/wasm/accu2020example_rust/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/hniemeyer/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/hniemeyer/src/wasm/accu2020example_rust/target/rls/debug/deps/libbumpalo-c3c28b7446c69f9c.rmeta"},"prelude":{"crate_id":{"name":"bumpalo","disambiguator":[12499936419681888288,16218809527031194731]},"crate_root":"/home/hniemeyer/.cargo/registry/src/github.com-1ecc6299db9ec823/bumpalo-3.1.2/src","external_crates":[{"file_name":"/home/hniemeyer/.cargo/registry/src/github.com-1ecc6299db9ec823/bumpalo-3.1.2/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[5366521311420338507,5001693844293236078]}},{"file_name":"/home/hniemeyer/.cargo/registry/src/github.com-1ecc6299db9ec823/bumpalo-3.1.2/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[16078967021793905033,18044181950654841110]}},{"file_name":"/home/hniemeyer/.cargo/registry/src/github.com-1ecc6299db9ec823/bumpalo-3.1.2/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[3256375668792353550,7694578384779899277]}},{"file_name":"/home/hniemeyer/.cargo/registry/src/github.com-1ecc6299db9ec823/bumpalo-3.1.2/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[17967524032803306908,5163911630854790873]}}],"span":{"file_name":"/home/hniemeyer/.cargo/registry/src/github.com-1ecc6299db9ec823/bumpalo-3.1.2/src/lib.rs","byte_start":0,"byte_end":42656,"line_start":1,"line_end":1203,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/hniemeyer/.cargo/registry/src/github.com-1ecc6299db9ec823/bumpalo-3.1.2/src/lib.rs","byte_start":0,"byte_end":42656,"line_start":1,"line_end":1203,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/hniemeyer/.cargo/registry/src/github.com-1ecc6299db9ec823/bumpalo-3.1.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":198},{"krate":0,"index":200},{"krate":0,"index":202},{"krate":0,"index":207},{"krate":0,"index":83},{"krate":0,"index":85},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":106},{"krate":0,"index":225},{"krate":0,"index":229},{"krate":0,"index":151},{"krate":0,"index":155},{"krate":0,"index":157},{"krate":0,"index":158}],"decl_id":null,"docs":"**A fast bump allocation arena for Rust.**","sig":null,"attributes":[{"value":"deny(missing_debug_implementations)","span":{"file_name":"/home/hniemeyer/.cargo/registry/src/github.com-1ecc6299db9ec823/bumpalo-3.1.2/src/lib.rs","byte_start":3142,"byte_end":3181,"line_start":102,"line_end":102,"column_start":1,"column_end":40}},{"value":"deny(missing_docs)","span":{"file_name":"/home/hniemeyer/.cargo/registry/src/github.com-1ecc6299db9ec823/bumpalo-3.1.2/src/lib.rs","byte_start":3182,"byte_end":3204,"line_start":103,"line_end":103,"column_start":1,"column_end":23}},{"value":"no_std","span":{"file_name":"/home/hniemeyer/.cargo/registry/src/github.com-1ecc6299db9ec823/bumpalo-3.1.2/src/lib.rs","byte_start":3205,"byte_end":3215,"line_start":104,"line_end":104,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":198},"span":{"file_name":"/home/hniemeyer/.cargo/registry/src/github.com-1ecc6299db9ec823/bumpalo-3.1.2/src/lib.rs","byte_start":5280,"byte_end":5284,"line_start":171,"line_end":171,"column_start":12,"column_end":16},"name":"Bump","qualname":"::Bump","value":"Bump {  }","parent":null,"children":[{"krate":0,"index":199}],"decl_id":null,"docs":" An arena to bump allocate into.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/home/hniemeyer/.cargo/registry/src/github.com-1ecc6299db9ec823/bumpalo-3.1.2/src/lib.rs","byte_start":10132,"byte_end":10135,"line_start":306,"line_end":306,"column_start":12,"column_end":15},"name":"new","qualname":"<Bump>::new","value":"fn () -> Bump","parent":null,"children":[],"decl_id":null,"docs":" Construct a new arena to bump allocate into.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/home/hniemeyer/.cargo/registry/src/github.com-1ecc6299db9ec823/bumpalo-3.1.2/src/lib.rs","byte_start":10415,"byte_end":10428,"line_start":318,"line_end":318,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Bump>::with_capacity","value":"fn (capacity: usize) -> Bump","parent":null,"children":[],"decl_id":null,"docs":" Construct a new arena with the specified capacity to bump allocate into.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/home/hniemeyer/.cargo/registry/src/github.com-1ecc6299db9ec823/bumpalo-3.1.2/src/lib.rs","byte_start":15589,"byte_end":15594,"line_start":448,"line_end":448,"column_start":12,"column_end":17},"name":"reset","qualname":"<Bump>::reset","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reset this bump allocator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/home/hniemeyer/.cargo/registry/src/github.com-1ecc6299db9ec823/bumpalo-3.1.2/src/lib.rs","byte_start":17109,"byte_end":17114,"line_start":494,"line_end":494,"column_start":12,"column_end":17},"name":"alloc","qualname":"<Bump>::alloc","value":"fn <T> (&self, val: T) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Allocate an object in this `Bump` and return an exclusive reference to\n it.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/hniemeyer/.cargo/registry/src/github.com-1ecc6299db9ec823/bumpalo-3.1.2/src/lib.rs","byte_start":17045,"byte_end":17062,"line_start":492,"line_end":492,"column_start":5,"column_end":22}},{"value":"allow(clippy :: mut_from_ref)","span":{"file_name":"/home/hniemeyer/.cargo/registry/src/github.com-1ecc6299db9ec823/bumpalo-3.1.2/src/lib.rs","byte_start":17067,"byte_end":17097,"line_start":493,"line_end":493,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/home/hniemeyer/.cargo/registry/src/github.com-1ecc6299db9ec823/bumpalo-3.1.2/src/lib.rs","byte_start":19034,"byte_end":19044,"line_start":540,"line_end":540,"column_start":12,"column_end":22},"name":"alloc_with","qualname":"<Bump>::alloc_with","value":"fn <F, T> (&self, f: F) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Pre-allocate space for an object in this `Bump`, initializes it using\n the closure, then returns an exclusive reference to it.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/hniemeyer/.cargo/registry/src/github.com-1ecc6299db9ec823/bumpalo-3.1.2/src/lib.rs","byte_start":18970,"byte_end":18987,"line_start":538,"line_end":538,"column_start":5,"column_end":22}},{"value":"allow(clippy :: mut_from_ref)","span":{"file_name":"/home/hniemeyer/.cargo/registry/src/github.com-1ecc6299db9ec823/bumpalo-3.1.2/src/lib.rs","byte_start":18992,"byte_end":19022,"line_start":539,"line_end":539,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"/home/hniemeyer/.cargo/registry/src/github.com-1ecc6299db9ec823/bumpalo-3.1.2/src/lib.rs","byte_start":20596,"byte_end":20612,"line_start":588,"line_end":588,"column_start":12,"column_end":28},"name":"alloc_slice_copy","qualname":"<Bump>::alloc_slice_copy","value":"fn <T> (&self, src: &[T]) -> &mut [T]","parent":null,"children":[],"decl_id":null,"docs":" `Copy` a slice into this `Bump` and return an exclusive reference to\n the copy.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/hniemeyer/.cargo/registry/src/github.com-1ecc6299db9ec823/bumpalo-3.1.2/src/lib.rs","byte_start":20532,"byte_end":20549,"line_start":586,"line_end":586,"column_start":5,"column_end":22}},{"value":"allow(clippy :: mut_from_ref)","span":{"file_name":"/home/hniemeyer/.cargo/registry/src/github.com-1ecc6299db9ec823/bumpalo-3.1.2/src/lib.rs","byte_start":20554,"byte_end":20584,"line_start":587,"line_end":587,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/home/hniemeyer/.cargo/registry/src/github.com-1ecc6299db9ec823/bumpalo-3.1.2/src/lib.rs","byte_start":21761,"byte_end":21778,"line_start":628,"line_end":628,"column_start":12,"column_end":29},"name":"alloc_slice_clone","qualname":"<Bump>::alloc_slice_clone","value":"fn <T> (&self, src: &[T]) -> &mut [T]","parent":null,"children":[],"decl_id":null,"docs":" `Clone` a slice into this `Bump` and return an exclusive reference to\n the clone. Prefer `alloc_slice_copy` if `T` is `Copy`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/hniemeyer/.cargo/registry/src/github.com-1ecc6299db9ec823/bumpalo-3.1.2/src/lib.rs","byte_start":21697,"byte_end":21714,"line_start":626,"line_end":626,"column_start":5,"column_end":22}},{"value":"allow(clippy :: mut_from_ref)","span":{"file_name":"/home/hniemeyer/.cargo/registry/src/github.com-1ecc6299db9ec823/bumpalo-3.1.2/src/lib.rs","byte_start":21719,"byte_end":21749,"line_start":627,"line_end":627,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/home/hniemeyer/.cargo/registry/src/github.com-1ecc6299db9ec823/bumpalo-3.1.2/src/lib.rs","byte_start":22634,"byte_end":22643,"line_start":659,"line_end":659,"column_start":12,"column_end":21},"name":"alloc_str","qualname":"<Bump>::alloc_str","value":"fn (&self, src: &str) -> &mut str","parent":null,"children":[],"decl_id":null,"docs":" `Copy` a string slice into this `Bump` and return an exclusive reference to it.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/hniemeyer/.cargo/registry/src/github.com-1ecc6299db9ec823/bumpalo-3.1.2/src/lib.rs","byte_start":22570,"byte_end":22587,"line_start":657,"line_end":657,"column_start":5,"column_end":22}},{"value":"allow(clippy :: mut_from_ref)","span":{"file_name":"/home/hniemeyer/.cargo/registry/src/github.com-1ecc6299db9ec823/bumpalo-3.1.2/src/lib.rs","byte_start":22592,"byte_end":22622,"line_start":658,"line_end":658,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/home/hniemeyer/.cargo/registry/src/github.com-1ecc6299db9ec823/bumpalo-3.1.2/src/lib.rs","byte_start":23554,"byte_end":23575,"line_start":686,"line_end":686,"column_start":12,"column_end":33},"name":"alloc_slice_fill_with","qualname":"<Bump>::alloc_slice_fill_with","value":"fn <T, F> (&self, len: usize, mut f: F) -> &mut [T]","parent":null,"children":[],"decl_id":null,"docs":" Allocates a new slice of size `len` into this `Bump` and returns an\n exclusive reference to the copy.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/hniemeyer/.cargo/registry/src/github.com-1ecc6299db9ec823/bumpalo-3.1.2/src/lib.rs","byte_start":23490,"byte_end":23507,"line_start":684,"line_end":684,"column_start":5,"column_end":22}},{"value":"allow(clippy :: mut_from_ref)","span":{"file_name":"/home/hniemeyer/.cargo/registry/src/github.com-1ecc6299db9ec823/bumpalo-3.1.2/src/lib.rs","byte_start":23512,"byte_end":23542,"line_start":685,"line_end":685,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"/home/hniemeyer/.cargo/registry/src/github.com-1ecc6299db9ec823/bumpalo-3.1.2/src/lib.rs","byte_start":24649,"byte_end":24670,"line_start":722,"line_end":722,"column_start":12,"column_end":33},"name":"alloc_slice_fill_copy","qualname":"<Bump>::alloc_slice_fill_copy","value":"fn <T> (&self, len: usize, value: T) -> &mut [T]","parent":null,"children":[],"decl_id":null,"docs":" Allocates a new slice of size `len` into this `Bump` and returns an\n exclusive reference to the copy.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/hniemeyer/.cargo/registry/src/github.com-1ecc6299db9ec823/bumpalo-3.1.2/src/lib.rs","byte_start":24585,"byte_end":24602,"line_start":720,"line_end":720,"column_start":5,"column_end":22}},{"value":"allow(clippy :: mut_from_ref)","span":{"file_name":"/home/hniemeyer/.cargo/registry/src/github.com-1ecc6299db9ec823/bumpalo-3.1.2/src/lib.rs","byte_start":24607,"byte_end":24637,"line_start":721,"line_end":721,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/home/hniemeyer/.cargo/registry/src/github.com-1ecc6299db9ec823/bumpalo-3.1.2/src/lib.rs","byte_start":25464,"byte_end":25486,"line_start":747,"line_end":747,"column_start":12,"column_end":34},"name":"alloc_slice_fill_clone","qualname":"<Bump>::alloc_slice_fill_clone","value":"fn <T> (&self, len: usize, value: &T) -> &mut [T]","parent":null,"children":[],"decl_id":null,"docs":" Allocates a new slice of size `len` slice into this `Bump` and return an\n exclusive reference to the copy.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/hniemeyer/.cargo/registry/src/github.com-1ecc6299db9ec823/bumpalo-3.1.2/src/lib.rs","byte_start":25400,"byte_end":25417,"line_start":745,"line_end":745,"column_start":5,"column_end":22}},{"value":"allow(clippy :: mut_from_ref)","span":{"file_name":"/home/hniemeyer/.cargo/registry/src/github.com-1ecc6299db9ec823/bumpalo-3.1.2/src/lib.rs","byte_start":25422,"byte_end":25452,"line_start":746,"line_end":746,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/home/hniemeyer/.cargo/registry/src/github.com-1ecc6299db9ec823/bumpalo-3.1.2/src/lib.rs","byte_start":26284,"byte_end":26305,"line_start":770,"line_end":770,"column_start":12,"column_end":33},"name":"alloc_slice_fill_iter","qualname":"<Bump>::alloc_slice_fill_iter","value":"fn <T, I> (&self, iter: I) -> &mut [T]","parent":null,"children":[],"decl_id":null,"docs":" Allocates a new slice of size `len` slice into this `Bump` and return an\n exclusive reference to the copy.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/hniemeyer/.cargo/registry/src/github.com-1ecc6299db9ec823/bumpalo-3.1.2/src/lib.rs","byte_start":26220,"byte_end":26237,"line_start":768,"line_end":768,"column_start":5,"column_end":22}},{"value":"allow(clippy :: mut_from_ref)","span":{"file_name":"/home/hniemeyer/.cargo/registry/src/github.com-1ecc6299db9ec823/bumpalo-3.1.2/src/lib.rs","byte_start":26242,"byte_end":26272,"line_start":769,"line_end":769,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/home/hniemeyer/.cargo/registry/src/github.com-1ecc6299db9ec823/bumpalo-3.1.2/src/lib.rs","byte_start":27184,"byte_end":27208,"line_start":799,"line_end":799,"column_start":12,"column_end":36},"name":"alloc_slice_fill_default","qualname":"<Bump>::alloc_slice_fill_default","value":"fn <T> (&self, len: usize) -> &mut [T]","parent":null,"children":[],"decl_id":null,"docs":" Allocates a new slice of size `len` slice into this `Bump` and return an\n exclusive reference to the copy.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/hniemeyer/.cargo/registry/src/github.com-1ecc6299db9ec823/bumpalo-3.1.2/src/lib.rs","byte_start":27120,"byte_end":27137,"line_start":797,"line_end":797,"column_start":5,"column_end":22}},{"value":"allow(clippy :: mut_from_ref)","span":{"file_name":"/home/hniemeyer/.cargo/registry/src/github.com-1ecc6299db9ec823/bumpalo-3.1.2/src/lib.rs","byte_start":27142,"byte_end":27172,"line_start":798,"line_end":798,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/home/hniemeyer/.cargo/registry/src/github.com-1ecc6299db9ec823/bumpalo-3.1.2/src/lib.rs","byte_start":27607,"byte_end":27619,"line_start":809,"line_end":809,"column_start":12,"column_end":24},"name":"alloc_layout","qualname":"<Bump>::alloc_layout","value":"fn (&self, layout: Layout) -> NonNull<u8>","parent":null,"children":[],"decl_id":null,"docs":" Allocate space for an object with the given `Layout`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/hniemeyer/.cargo/registry/src/github.com-1ecc6299db9ec823/bumpalo-3.1.2/src/lib.rs","byte_start":27578,"byte_end":27595,"line_start":808,"line_end":808,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/home/hniemeyer/.cargo/registry/src/github.com-1ecc6299db9ec823/bumpalo-3.1.2/src/lib.rs","byte_start":34523,"byte_end":34544,"line_start":976,"line_end":976,"column_start":12,"column_end":33},"name":"iter_allocated_chunks","qualname":"<Bump>::iter_allocated_chunks","value":"fn (&mut self) -> ChunkIter<'_>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over each chunk of allocated memory that\n this arena has bump allocated into.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/home/hniemeyer/.cargo/registry/src/github.com-1ecc6299db9ec823/bumpalo-3.1.2/src/lib.rs","byte_start":35451,"byte_end":35466,"line_start":1000,"line_end":1000,"column_start":12,"column_end":27},"name":"allocated_bytes","qualname":"<Bump>::allocated_bytes","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Calculates the number of bytes currently allocated across all chunks.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":225},"span":{"file_name":"/home/hniemeyer/.cargo/registry/src/github.com-1ecc6299db9ec823/bumpalo-3.1.2/src/lib.rs","byte_start":36795,"byte_end":36804,"line_start":1042,"line_end":1042,"column_start":12,"column_end":21},"name":"ChunkIter","qualname":"::ChunkIter","value":"ChunkIter {  }","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":228}],"decl_id":null,"docs":" An iterator over each chunk of allocated memory that\n an arena has bump allocated into.","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/hniemeyer/.cargo/registry/src/github.com-1ecc6299db9ec823/bumpalo-3.1.2/src/alloc.rs","byte_start":43794,"byte_end":43800,"line_start":38,"line_end":38,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/hniemeyer/.cargo/registry/src/github.com-1ecc6299db9ec823/bumpalo-3.1.2/src/alloc.rs","byte_start":46479,"byte_end":46487,"line_start":110,"line_end":110,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":41}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/hniemeyer/.cargo/registry/src/github.com-1ecc6299db9ec823/bumpalo-3.1.2/src/alloc.rs","byte_start":46965,"byte_end":46985,"line_start":124,"line_end":124,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":43}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/hniemeyer/.cargo/registry/src/github.com-1ecc6299db9ec823/bumpalo-3.1.2/src/alloc.rs","byte_start":47227,"byte_end":47247,"line_start":132,"line_end":132,"column_start":23,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/hniemeyer/.cargo/registry/src/github.com-1ecc6299db9ec823/bumpalo-3.1.2/src/lib.rs","byte_start":5864,"byte_end":5868,"line_start":193,"line_end":193,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/hniemeyer/.cargo/registry/src/github.com-1ecc6299db9ec823/bumpalo-3.1.2/src/lib.rs","byte_start":5941,"byte_end":5945,"line_start":199,"line_end":199,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/hniemeyer/.cargo/registry/src/github.com-1ecc6299db9ec823/bumpalo-3.1.2/src/lib.rs","byte_start":6632,"byte_end":6636,"line_start":219,"line_end":219,"column_start":22,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/hniemeyer/.cargo/registry/src/github.com-1ecc6299db9ec823/bumpalo-3.1.2/src/lib.rs","byte_start":9937,"byte_end":9941,"line_start":297,"line_end":297,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":117},{"krate":0,"index":123},{"krate":0,"index":125},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":132},{"krate":0,"index":135},{"krate":0,"index":138},{"krate":0,"index":142},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/hniemeyer/.cargo/registry/src/github.com-1ecc6299db9ec823/bumpalo-3.1.2/src/lib.rs","byte_start":36915,"byte_end":36924,"line_start":1047,"line_end":1047,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":153},{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/hniemeyer/.cargo/registry/src/github.com-1ecc6299db9ec823/bumpalo-3.1.2/src/lib.rs","byte_start":37602,"byte_end":37611,"line_start":1066,"line_end":1066,"column_start":34,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/hniemeyer/.cargo/registry/src/github.com-1ecc6299db9ec823/bumpalo-3.1.2/src/alloc.rs","byte_start":43794,"byte_end":43800,"line_start":38,"line_end":38,"column_start":32,"column_end":38},"kind":{"Impl":{"id":0}},"from":{"krate":1,"index":31578},"to":{"krate":0,"index":27}},{"span":{"file_name":"/home/hniemeyer/.cargo/registry/src/github.com-1ecc6299db9ec823/bumpalo-3.1.2/src/alloc.rs","byte_start":46479,"byte_end":46487,"line_start":110,"line_end":110,"column_start":23,"column_end":31},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":171},"to":{"krate":1,"index":7578}},{"span":{"file_name":"/home/hniemeyer/.cargo/registry/src/github.com-1ecc6299db9ec823/bumpalo-3.1.2/src/alloc.rs","byte_start":46965,"byte_end":46985,"line_start":124,"line_end":124,"column_start":6,"column_end":26},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":183},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hniemeyer/.cargo/registry/src/github.com-1ecc6299db9ec823/bumpalo-3.1.2/src/alloc.rs","byte_start":47227,"byte_end":47247,"line_start":132,"line_end":132,"column_start":23,"column_end":43},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":183},"to":{"krate":1,"index":7578}},{"span":{"file_name":"/home/hniemeyer/.cargo/registry/src/github.com-1ecc6299db9ec823/bumpalo-3.1.2/src/lib.rs","byte_start":5864,"byte_end":5868,"line_start":193,"line_end":193,"column_start":18,"column_end":22},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":198},"to":{"krate":1,"index":2210}},{"span":{"file_name":"/home/hniemeyer/.cargo/registry/src/github.com-1ecc6299db9ec823/bumpalo-3.1.2/src/lib.rs","byte_start":5941,"byte_end":5945,"line_start":199,"line_end":199,"column_start":15,"column_end":19},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":198},"to":{"krate":1,"index":1731}},{"span":{"file_name":"/home/hniemeyer/.cargo/registry/src/github.com-1ecc6299db9ec823/bumpalo-3.1.2/src/lib.rs","byte_start":6632,"byte_end":6636,"line_start":219,"line_end":219,"column_start":22,"column_end":26},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":198},"to":{"krate":1,"index":1538}},{"span":{"file_name":"/home/hniemeyer/.cargo/registry/src/github.com-1ecc6299db9ec823/bumpalo-3.1.2/src/lib.rs","byte_start":9937,"byte_end":9941,"line_start":297,"line_end":297,"column_start":6,"column_end":10},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":198},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hniemeyer/.cargo/registry/src/github.com-1ecc6299db9ec823/bumpalo-3.1.2/src/lib.rs","byte_start":36915,"byte_end":36924,"line_start":1047,"line_end":1047,"column_start":23,"column_end":32},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":225},"to":{"krate":1,"index":3602}},{"span":{"file_name":"/home/hniemeyer/.cargo/registry/src/github.com-1ecc6299db9ec823/bumpalo-3.1.2/src/lib.rs","byte_start":37602,"byte_end":37611,"line_start":1066,"line_end":1066,"column_start":34,"column_end":43},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":225},"to":{"krate":1,"index":3959}}]}